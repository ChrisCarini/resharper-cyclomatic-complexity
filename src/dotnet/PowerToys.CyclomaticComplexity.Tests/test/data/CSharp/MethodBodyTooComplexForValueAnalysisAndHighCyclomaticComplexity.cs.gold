using System;

public class |MethodBodyTooComplex|(0)
{
  // This relies on an implementation detail of ReSharper's value analysis
  // It only tracks 84 variables in a method (any more starts to incur too
  // much cost). A warning is added that is normally set to "Do not show",
  // but since we're concerned with complexity, I think it's worth enabling
  // Since we get two warnings on the same method declaration, ReSharper
  // handles the overlap by hiding the cyclomatic complexity warning
  public static void |MethodBodyTooComplexForValueAnalysisAndHighCyclomaticComplexity|(1)(object obj)
  {
    var t1 = obj as string;
    if (t1 != null) { }
    var t2 = obj as string;
    if (t2 != null) { }
    var t3 = obj as string;
    if (t3 != null) { }
    var t4 = obj as string;
    if (t4 != null) { }
    var t5 = obj as string;
    if (t5 != null) { }
    var t6 = obj as string;
    if (t6 != null) { }
    var t7 = obj as string;
    if (t7 != null) { }
    var t8 = obj as string;
    if (t8 != null) { }
    var t9 = obj as string;
    if (t9 != null) { }
    var t10 = obj as string;
    if (t10 != null) { }
    var t11 = obj as string;
    if (t11 != null) { }
    var t12 = obj as string;
    if (t12 != null) { }
    var t13 = obj as string;
    if (t13 != null) { }
    var t14 = obj as string;
    if (t14 != null) { }
    var t15 = obj as string;
    if (t15 != null) { }
    var t16 = obj as string;
    if (t16 != null) { }
    var t17 = obj as string;
    if (t17 != null) { }
    var t18 = obj as string;
    if (t18 != null) { }
    var t19 = obj as string;
    if (t19 != null) { }
    var t20 = obj as string;
    if (t20 != null) { }
    var t21 = obj as string;
    if (t21 != null) { }
    var t22 = obj as string;
    if (t22 != null) { }
    var t23 = obj as string;
    if (t23 != null) { }
    var t24 = obj as string;
    if (t24 != null) { }
    var t25 = obj as string;
    if (t25 != null) { }
    var t26 = obj as string;
    if (t26 != null) { }
    var t27 = obj as string;
    if (t27 != null) { }
    var t28 = obj as string;
    if (t28 != null) { }
    var t29 = obj as string;
    if (t29 != null) { }
    var t30 = obj as string;
    if (t30 != null) { }
    var t31 = obj as string;
    if (t31 != null) { }
    var t32 = obj as string;
    if (t32 != null) { }
    var t33 = obj as string;
    if (t33 != null) { }
    var t34 = obj as string;
    if (t34 != null) { }
    var t35 = obj as string;
    if (t35 != null) { }
    var t36 = obj as string;
    if (t36 != null) { }
    var t37 = obj as string;
    if (t37 != null) { }
    var t38 = obj as string;
    if (t38 != null) { }
    var t39 = obj as string;
    if (t39 != null) { }
    var t40 = obj as string;
    if (t40 != null) { }
    var t41 = obj as string;
    if (t41 != null) { }
    var t42 = obj as string;
    if (t42 != null) { }
    var t43 = obj as string;
    if (t43 != null) { }
    var t44 = obj as string;
    if (t44 != null) { }
    var t45 = obj as string;
    if (t45 != null) { }
    var t46 = obj as string;
    if (t46 != null) { }
    var t47 = obj as string;
    if (t47 != null) { }
    var t48 = obj as string;
    if (t48 != null) { }
    var t49 = obj as string;
    if (t49 != null) { }
    var t50 = obj as string;
    if (t50 != null) { }
    var t51 = obj as string;
    if (t51 != null) { }
    var t52 = obj as string;
    if (t52 != null) { }
    var t53 = obj as string;
    if (t53 != null) { }
    var t54 = obj as string;
    if (t54 != null) { }
    var t55 = obj as string;
    if (t55 != null) { }
    var t56 = obj as string;
    if (t56 != null) { }
    var t57 = obj as string;
    if (t57 != null) { }
    var t58 = obj as string;
    if (t58 != null) { }
    var t59 = obj as string;
    if (t59 != null) { }
    var t60 = obj as string;
    if (t60 != null) { }
    var t61 = obj as string;
    if (t61 != null) { }
    var t62 = obj as string;
    if (t62 != null) { }
    var t63 = obj as string;
    if (t63 != null) { }
    var t64 = obj as string;
    if (t64 != null) { }
    var t65 = obj as string;
    if (t65 != null) { }
    var t66 = obj as string;
    if (t66 != null) { }
    var t67 = obj as string;
    if (t67 != null) { }
    var t68 = obj as string;
    if (t68 != null) { }
    var t69 = obj as string;
    if (t69 != null) { }
    var t70 = obj as string;
    if (t70 != null) { }
    var t71 = obj as string;
    if (t71 != null) { }
    var t72 = obj as string;
    if (t72 != null) { }
    var t73 = obj as string;
    if (t73 != null) { }
    var t74 = obj as string;
    if (t74 != null) { }
    var t75 = obj as string;
    if (t75 != null) { }
    var t76 = obj as string;
    if (t76 != null) { }
    var t77 = obj as string;
    if (t77 != null) { }
    var t78 = obj as string;
    if (t78 != null) { }
    var t79 = obj as string;
    if (t79 != null) { }
    var t80 = obj as string;
    if (t80 != null) { }
    var t81 = obj as string;
    if (t81 != null) { }
    var t82 = obj as string;
    if (t82 != null) { }
    var t83 = obj as string;
    if (t83 != null) { }
  }
}

---------------------------------------------------------
(0): Cyclomatic Complexity Highlight: Class 'MethodBodyTooComplex' has cyclomatic complexity of 1 (5% of threshold)
(1):<overlapped> ReSharper Warning: Method 'MethodBodyTooComplexForValueAnalysisAndHighCyclomaticComplexity' has cyclomatic complexity of 84 (420% of threshold)
